<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="MovieDBDataSetDIR" targetNamespace="http://tempuri.org/MovieDBDataSetDIR.xsd" xmlns:mstns="http://tempuri.org/MovieDBDataSetDIR.xsd" xmlns="http://tempuri.org/MovieDBDataSetDIR.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="MovieDBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="MovieDBConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.MovieApp.Properties.Settings.GlobalReference.Default.MovieDBConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DirectorTableAdapter" GeneratorDataComponentClassName="DirectorTableAdapter" Name="Director" UserDataComponentName="DirectorTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="MovieDBConnectionString (Settings)" DbObjectName="dbo.Director" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Director] WHERE (([dirId] = @Original_dirId) AND ([dirFName] = @Original_dirFName) AND ([dirLName] = @Original_dirLName))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_dirId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dirId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_dirFName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="dirFName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_dirLName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="dirLName" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Director] ([dirFName], [dirLName]) VALUES (@dirFName, @dirLName);
SELECT dirId, dirFName, dirLName FROM Director WHERE (dirId = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@dirFName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="dirFName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@dirLName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="dirLName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT dirId, dirFName, dirLName FROM dbo.Director</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Director] SET [dirFName] = @dirFName, [dirLName] = @dirLName WHERE (([dirId] = @Original_dirId) AND ([dirFName] = @Original_dirFName) AND ([dirLName] = @Original_dirLName));
SELECT dirId, dirFName, dirLName FROM Director WHERE (dirId = @dirId)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@dirFName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="dirFName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@dirLName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="dirLName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_dirId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="dirId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_dirFName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="dirFName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_dirLName" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="dirLName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="dirId" ColumnName="dirId" DataSourceName="[C:\USERS\MACKOLAS\DESKTOP\MOVIE-DATABASE\MOVIEAPP\MOVIEAPP\MOVIEAPP\MOVIEDB.MDF].dbo.Director" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@dirId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="dirId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="dirId" DataSetColumn="dirId" />
              <Mapping SourceColumn="dirFName" DataSetColumn="dirFName" />
              <Mapping SourceColumn="dirLName" DataSetColumn="dirLName" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="MovieDBDataSetDIR" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="MovieDBDataSetDIR" msprop:Generator_UserDSName="MovieDBDataSetDIR">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Director" msprop:Generator_TableClassName="DirectorDataTable" msprop:Generator_TableVarName="tableDirector" msprop:Generator_TablePropName="Director" msprop:Generator_RowDeletingName="DirectorRowDeleting" msprop:Generator_RowChangingName="DirectorRowChanging" msprop:Generator_RowEvHandlerName="DirectorRowChangeEventHandler" msprop:Generator_RowDeletedName="DirectorRowDeleted" msprop:Generator_UserTableName="Director" msprop:Generator_RowChangedName="DirectorRowChanged" msprop:Generator_RowEvArgName="DirectorRowChangeEvent" msprop:Generator_RowClassName="DirectorRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="dirId" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columndirId" msprop:Generator_ColumnPropNameInRow="dirId" msprop:Generator_ColumnPropNameInTable="dirIdColumn" msprop:Generator_UserColumnName="dirId" type="xs:int" />
              <xs:element name="dirFName" msprop:Generator_ColumnVarNameInTable="columndirFName" msprop:Generator_ColumnPropNameInRow="dirFName" msprop:Generator_ColumnPropNameInTable="dirFNameColumn" msprop:Generator_UserColumnName="dirFName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="32" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="dirLName" msprop:Generator_ColumnVarNameInTable="columndirLName" msprop:Generator_ColumnPropNameInRow="dirLName" msprop:Generator_ColumnPropNameInTable="dirLNameColumn" msprop:Generator_UserColumnName="dirLName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="32" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Director" />
      <xs:field xpath="mstns:dirId" />
    </xs:unique>
  </xs:element>
</xs:schema>